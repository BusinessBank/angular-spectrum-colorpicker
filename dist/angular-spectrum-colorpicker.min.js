/*! angular-spectrum-colorpicker v1.3.3 */
!function(a){"use strict";var b=a.module("angularSpectrumColorpicker",[]);!function(){b.directive("spectrumColorpicker",function(){return{restrict:"E",require:"ngModel",scope:{fallbackValue:"=",disabled:"=?",format:"=?",options:"=?",triggerId:"@?",onChange:"&?",onShow:"&?",onHide:"&?",onMove:"&?",onBeforeShow:"&?"},replace:!0,templateUrl:"directive.html",link:function(b,c,d,e){function f(a){var c=a;return c&&(c=a.toString(b.format)),c}function g(c){a.isFunction(b.onChange)&&b.onChange({color:c})}function h(c){var d=b.fallbackValue;c?d=f(c):a.isUndefined(b.fallbackValue)&&(d=c),e.$setViewValue(d),g(d)}var i=c.find("input"),j=function(){return i.spectrum("toggle"),!1},k={color:e.$viewValue},l={};a.forEach({change:"onChange",move:"onMove",hide:"onHide",show:"onShow"},function(c,d){l[d]=function(d){return h(d),"change"!==c&&a.isFunction(b[c])?b[c]({color:f(d)}):void 0}}),a.isFunction(b.onBeforeShow)&&(l.beforeShow=function(a){return b.onBeforeShow({color:f(a)})});var m=a.extend({},k,b.options,l);b.triggerId&&a.element(document.body).on("click","#"+b.triggerId,j),e.$render=function(){i.spectrum("set",e.$viewValue||""),g(e.$viewValue)},m.color&&(i.spectrum("set",m.color||""),h(m.color)),i.spectrum(m),b.$on("$destroy",function(){b.triggerId&&a.element(document.body).off("click","#"+b.triggerId,j),i.spectrum("destroy")}),a.isDefined(m.disabled)&&(b.disabled=!!m.disabled),b.$watch("disabled",function(a){i.spectrum(a?"disable":"enable")})}}})}(),a.module("angularSpectrumColorpicker").run(["$templateCache",function(a){a.put("directive.html","<span><input class=input-small></span>")}])}(window.angular);